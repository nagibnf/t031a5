#!/usr/bin/env python3
"""
Teste simples de comunica√ß√£o com G1 usando SDK oficial.
"""

import time
import sys
from pathlib import Path

# Adiciona o diret√≥rio src ao path
sys.path.insert(0, str(Path(__file__).parent / "src"))

def test_g1_sdk():
    """Testa conex√£o b√°sica com G1 usando SDK oficial."""
    
    print("üîß Testando SDK G1...")
    print("=" * 50)
    
    try:
        # Testar imports b√°sicos
        print("üîç Testando imports...")
        
        from unitree_sdk2py.core.channel import ChannelFactoryInitialize
        print("‚úÖ ChannelFactoryInitialize importado")
        
        from unitree_sdk2py.idl.unitree_hg.msg.dds_ import LowState_
        print("‚úÖ LowState_ importado")
        
        from unitree_sdk2py.comm.motion_switcher.motion_switcher_client import MotionSwitcherClient
        print("‚úÖ MotionSwitcherClient importado")
        
        # Inicializar factory
        print("\nüîÑ Inicializando factory...")
        ChannelFactoryInitialize()
        print("‚úÖ Factory inicializada")
        
        # Testar MotionSwitcherClient
        print("\nü§ñ Testando MotionSwitcherClient...")
        msc = MotionSwitcherClient()
        msc.SetTimeout(5.0)
        msc.Init()
        print("‚úÖ MotionSwitcherClient inicializado")
        
        # Verificar modo
        print("\nüìä Verificando modo atual...")
        status, result = msc.CheckMode()
        print(f"Status: {status}")
        print(f"Result: {result}")
        
        if result and result.get('name'):
            print(f"‚ö†Ô∏è  Modo atual: {result['name']}")
            print("üîÑ Liberando modo...")
            msc.ReleaseMode()
            time.sleep(1)
            
            status, result = msc.CheckMode()
            print(f"Status ap√≥s libera√ß√£o: {status}")
            print(f"Result ap√≥s libera√ß√£o: {result}")
        elif status == 3102:
            print("‚ö†Ô∏è  Erro de comunica√ß√£o com G1")
            print("üí° Poss√≠veis causas:")
            print("   - G1 n√£o est√° ligado")
            print("   - G1 n√£o est√° no modo correto")
            print("   - Problema de rede")
            print("   - G1 precisa ser inicializado")
        else:
            print("‚úÖ Nenhum modo ativo")
        
        print("\n‚úÖ Teste do SDK conclu√≠do com sucesso!")
        
    except ImportError as e:
        print(f"‚ùå Erro de import: {e}")
        import traceback
        traceback.print_exc()
        
    except Exception as e:
        print(f"üí• Erro durante o teste: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_g1_sdk()
