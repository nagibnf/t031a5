#!/bin/bash
# t031a5 - Script Principal do Sistema G1
# Uso: ./t031a5 [comando]

# set -e  # Comentado para evitar parada em erros menores

# Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

# Banner
show_banner() {
    echo -e "${CYAN}"
    echo "╔══════════════════════════════════════╗"
    echo "║           🤖 t031a5 G1 System       ║"
    echo "║        Sistema OM1 para Unitree      ║"
    echo "╚══════════════════════════════════════╝"
    echo -e "${NC}"
}

# Ajuda
show_help() {
    echo -e "${BLUE}📋 COMANDOS DISPONÍVEIS:${NC}"
    echo
    echo -e "  ${GREEN}./t031a5 start${NC}      - Iniciar sistema (modo interativo)"
    echo -e "  ${GREEN}./t031a5 deploy${NC}     - Deploy completo (primeira vez)"
    echo -e "  ${GREEN}./t031a5 setup${NC}      - Setup ambiente e dependências"
    echo -e "  ${GREEN}./t031a5 status${NC}     - Status do sistema"
    echo -e "  ${GREEN}./t031a5 logs${NC}       - Ver logs em tempo real"
    echo -e "  ${GREEN}./t031a5 test${NC}       - Executar testes"
    echo -e "  ${GREEN}./t031a5 clean${NC}      - Limpar logs e temporários"
    echo -e "  ${GREEN}./t031a5 help${NC}       - Esta ajuda"
    echo
    echo -e "${PURPLE}🎯 MODOS RÁPIDOS:${NC}"
    echo -e "  ${GREEN}./t031a5 prod${NC}       - Produção (G1 real)"
    echo -e "  ${GREEN}./t031a5 logitech${NC}   - 📷 Câmera Logitech USB"
    echo -e "  ${GREEN}./t031a5 mock${NC}       - Desenvolvimento (mock)"
    echo -e "  ${GREEN}./t031a5 websim${NC}     - Apenas WebSim"
    echo -e "  ${GREEN}./t031a5 talk${NC}       - Modo conversação"
    echo -e "  ${GREEN}./t031a5 native${NC}     - Conectores nativos"
    echo -e "  ${GREEN}./t031a5 test${NC}       - Teste no robô G1"
    echo -e "  ${GREEN}./t031a5 elevenlabs${NC} - 🎤 ElevenLabs TTS"
    echo -e "  ${GREEN}./t031a5 api${NC}        - Gerenciar APIs"
    echo
    echo -e "${CYAN}💡 Exemplos:${NC}"
    echo -e "  ./t031a5 start     # Modo interativo"
    echo -e "  ./t031a5 prod      # Direto para produção"
    echo -e "  ./t031a5 status    # Ver status"
}

# Verificar se está na pasta correta
check_directory() {
    if [ ! -f "pyproject.toml" ]; then
        echo -e "${RED}❌ Execute este script na pasta raiz do projeto t031a5${NC}"
        exit 1
    fi
}

# Ativar ambiente virtual
activate_venv() {
    if [ ! -d "venv" ]; then
        echo -e "${YELLOW}📦 Criando ambiente virtual...${NC}"
        python3 -m venv venv
    fi
    
    echo -e "${BLUE}🔧 Ativando ambiente virtual...${NC}"
    
    # Detectar shell e ativar apropriadamente
    if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
        # Windows/PowerShell
        if [ -f "venv/Scripts/activate" ]; then
            source venv/Scripts/activate
        else
            echo -e "${YELLOW}⚠️  Usando Python direto da venv${NC}"
            export PATH="venv/Scripts:$PATH"
        fi
    else
        # Unix/Linux/macOS
        source venv/bin/activate
    fi
    
    # Verificar se projeto está instalado
    if ! python -c "import t031a5" 2>/dev/null; then
        echo -e "${YELLOW}📦 Instalando projeto...${NC}"
        pip install -e . -q
    fi
}

# Comandos
cmd_start() {
    show_banner
    activate_venv
    
    echo -e "${BLUE}🎯 Selecione o modo:${NC}"
    echo "1) 🎯 Produção (G1 real)"
    echo "2) 📷 Câmera Logitech USB"
    echo "3) 🧪 Desenvolvimento (Mock)" 
    echo "4) 🌐 WebSim apenas"
    echo "5) 💬 Conversação avançada"
    echo "6) 🔌 Conectores Nativos (otimização)"
    echo
    read -p "Escolha (1-6): " choice
    
    case $choice in
        1) run_config "config/g1_production.json5" "🎯 PRODUÇÃO" ;;
        2) run_config "config/g1_logitech.json5" "📷 LOGITECH" ;;
        3) run_config "config/g1_mock.json5" "🧪 MOCK" ;;
        4) run_websim_only ;;
        5) run_config "config/g1_conversation.json5" "💬 CONVERSAÇÃO" ;;
        6) run_config "config/g1_native_connectors.json5" "🔌 CONECTORES NATIVOS" ;;
        *) echo -e "${RED}Opção inválida${NC}"; exit 1 ;;
    esac
}

cmd_deploy() {
    show_banner
    echo -e "${BLUE}🚀 Executando deploy completo...${NC}"
    ./deploy_g1.sh
}

cmd_setup() {
    show_banner
    activate_venv
    echo -e "${GREEN}✅ Setup concluído!${NC}"
}

run_config() {
    local config=$1
    local mode=$2
    echo -e "${GREEN}🚀 Iniciando ${mode}...${NC}"
    python -m t031a5.cli run --config "$config"
}

run_websim_only() {
    echo -e "${CYAN}🌐 Iniciando WebSim...${NC}"
    cat > /tmp/websim_only.json5 << EOF
{
  "name": "WebSim Only",
  "hertz": 2,
  "development": {"websim_enabled": true},
  "agent_inputs": {}, "agent_actions": {},
  "fuser": {"type": "priority", "config": {}},
  "llm": {"provider": "mock"},
  "g1_controller": {"enabled": false},
  "websim": {"enabled": true, "host": "0.0.0.0", "port": 8080},
  "logging": {"level": "INFO"}
}
EOF
    python -m t031a5.cli run --config /tmp/websim_only.json5
    rm /tmp/websim_only.json5
}

cmd_status() {
    activate_venv
    python -m t031a5.cli status
}

cmd_logs() {
    if [ -f "logs/g1_production.log" ]; then
        tail -f logs/g1_production.log
    elif [ -f "logs/g1_mock.log" ]; then
        tail -f logs/g1_mock.log
    else
        echo -e "${YELLOW}⚠️  Nenhum log encontrado${NC}"
    fi
}

cmd_test() {
    activate_venv
    echo -e "${BLUE}🧪 Executando testes...${NC}"
    python tests/run_test.py test_system.py
}

cmd_clean() {
    echo -e "${YELLOW}🧹 Limpando arquivos temporários...${NC}"
    rm -rf logs/*.log temp/ .pytest_cache/ *.tmp 2>/dev/null || true
    echo -e "${GREEN}✅ Limpeza concluída${NC}"
}

cmd_api() {
    echo -e "${BLUE}🔐 Iniciando comando API...${NC}"
    # Executar diretamente com todos os argumentos exceto o primeiro
    venv/bin/python -m t031a5.cli_api "${@:2}"
}

# Main
main() {
    check_directory
    
    echo -e "${BLUE}🔍 Comando recebido: '$1'${NC}"
    
    case "${1:-help}" in
        start)   cmd_start ;;
        deploy)  cmd_deploy ;;
        setup)   cmd_setup ;;
        status)  cmd_status ;;
        logs)    cmd_logs ;;
        test)    cmd_test ;;
        clean)   cmd_clean ;;
        api)     echo -e "${BLUE}🔐 Executando cmd_api${NC}" && cmd_api ;;
                        prod)    activate_venv && run_config "config/g1_production.json5" "🎯 PRODUÇÃO" ;;
                logitech) activate_venv && run_config "config/g1_logitech.json5" "📷 LOGITECH" ;;
                mock)    activate_venv && run_config "config/g1_mock.json5" "🧪 MOCK" ;;
                websim)  activate_venv && run_websim_only ;;
                talk)    activate_venv && run_config "config/g1_conversation.json5" "💬 CONVERSAÇÃO" ;;
                native)  activate_venv && run_config "config/g1_native_connectors.json5" "🔌 CONECTORES NATIVOS" ;;
                test)    activate_venv && run_config "config/g1_test_robot.json5" "🤖 TESTE NO ROBÔ" ;;
                elevenlabs) activate_venv && run_config "config/g1_elevenlabs.json5" "🎤 ELEVENLABS TTS" ;;
        help|*)  show_help ;;
    esac
}

main "$@"
