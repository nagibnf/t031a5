[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "t031a5"
version = "0.1.0"
description = "Sistema de IA multimodal para o robô humanóide G1 da Unitree"
authors = [
    {name = "t031a5 Team", email = "dev@t031a5.org"}
]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # Core t031a5 dependencies
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "asyncio-mqtt>=0.16.0",
    "aiofiles>=23.0.0",
    "python-multipart>=0.0.6",
    "uvicorn>=0.24.0",
    "fastapi>=0.104.0",
    "websockets>=12.0",
    
    # Unitree G1 SDK (instalado separadamente)
    # "unitree_sdk2_python>=1.0.0",
    "cyclonedds>=0.10.0",
    
    # AI/ML dependencies
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "torchvision>=0.15.0",
    
    # Audio processing
    "pyaudio>=0.2.11",
    "soundfile>=0.12.1",
    "librosa>=0.10.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    
    # Computer vision
    "opencv-python>=4.8.0",
    "pillow>=10.0.0",
    
    # Utilities
    "json5>=0.9.0",
    "rich>=13.0.0",
    "click>=8.1.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0.0",
    "toml>=0.10.0",
    
    # Development dependencies
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "pre-commit>=3.4.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocstrings>=0.23.0",
]

[project.scripts]
t031a5 = "t031a5.cli:main"

[project.urls]
Homepage = "https://github.com/t031a5/t031a5"
Documentation = "https://docs.t031a5.org"
Repository = "https://github.com/t031a5/t031a5"
Issues = "https://github.com/t031a5/t031a5/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/t031a5"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["t031a5"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=t031a5",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
